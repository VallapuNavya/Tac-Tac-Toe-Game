import java.util.Scanner;
import java.util.Random;
// java.util.Scanner;
class TicTacToe{
	static char[][] board;
	public TicTacToe(){
		board=new char[3][3];
		initBoard();
	}
	void initBoard() {
		for(int i=0;i<board.length;i++) {
			for(int j=0;j<board[i].length;j++) {
				board[i][j]=' ';
			}
		}
	}
	static void dispBoard(){
		System.out.println(" -------------");
		for(int i=0;i<board.length;i++) {
			System.out.print(" | "); 
			for(int j=0;j<board[i].length;j++) {
				System.out.print(board[i][j]+" | ");
			}
			System.out.println();
			System.out.println(" -------------");
		}
	}
	static void placeMark(int row,int coloumn,char mark) {
		if(row>=0 && row<=2 && coloumn>=0 && coloumn<=2)
			board[row][coloumn]=mark;
		else
			System.out.println("invalid position");
	}
	static boolean checkColoumnWin() {
		for(int j=0;j<=2;j++) {
			if(board[0][j] !=' ' && board[0][j]==board[1][j] && board[1][j]==board[2][j])
				return true;		
		}
		return false;
	}
	static boolean checkRowWin() {
		for(int i=0;i<=2;i++) {
			if(board[i][0]!=' '&& board[i][0]==board[i][2] && board[i][1]==board[i][2])
				return true;
		}
		return false;
	}
	static boolean checkDiaogWin() {
		if(board[0][0]!=' ' && board[0][0]==board[1][1] && board[1][1]==board[2][2]||board[0][2]!=' ' && board[0][2]==board[1][1]&&board[1][1]==board[2][0])
			return true;
		else
			return false;
	}
	static boolean checkDraw() {
		for(int i=0;i<=2;i++) {
			for(int j=0;j<=2;j++) {
				if(board[i][j]==' ') {
					return false;
				}
			}
		}
		return true;
	}
}
abstract class Player{
	String name;
	char mark;
	abstract void makeMove();
	boolean isValidMove(int row,int coloumn) {
		if(row>=0 && row<=2 && coloumn>=0 && coloumn<=2) {
			if(TicTacToe.board[row][coloumn]==' ') 
			{
				return true;
			}
		}
		return false;
	}
}
class HumanPlayer extends Player{
	
	HumanPlayer(String name,char mark)
	{
		this.name=name;
		this.mark=mark;
	}
     void makeMove() {
		Scanner scan =new Scanner(System.in);
		int row;
		int coloumn;
		do
		{
			System.out.println("enter the row and coloumn");
			row=scan.nextInt();
			coloumn=scan.nextInt();
		}while(!isValidMove(row,coloumn));
		TicTacToe.placeMark(row,coloumn,mark);
	}
}
class AiPlayer extends Player{
	AiPlayer(String name,char mark)
	{
		this.name=name;
		this.mark=mark;
	}
	void makeMove() {
		Scanner scan =new Scanner(System.in);
		int row;
		int coloumn;
		do {
			Random r=new Random();
			row=r.nextInt(3);
			coloumn=r.nextInt(3);
		}while(!isValidMove(row,coloumn));
		TicTacToe.placeMark(row, coloumn, mark);
	}
}
public class LaunchGame {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		TicTacToe t=new TicTacToe();
		
		HumanPlayer p1=new HumanPlayer("Asha ",'X');
		AiPlayer p2=new AiPlayer("Esha ",'O');
		
		Player cp;
		cp=p1;
		while(true) {
			System.out.println(cp.name + " turn ");
			cp.makeMove();
			TicTacToe.dispBoard();
			if(TicTacToe.checkRowWin() || TicTacToe.checkColoumnWin() || TicTacToe.checkDiaogWin()) 
			{
				System.out.println(cp.name + " has won");
				break;
			}
			else if(TicTacToe.checkDraw()) {
				System.out.println("Game is draw ");
				break;
			}
			else {
				if(cp==p1) {
					cp=p2;
				}
				else {
					cp=p1;
				}
			}
		}
		
	}

}
